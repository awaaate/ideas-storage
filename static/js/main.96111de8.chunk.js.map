{"version":3,"sources":["logo.svg","firebase/firebase.functions.js","components/input-card/input-card.component.jsx","components/idea-form/idea-form.component.jsx","assets/Icon ionic-md-open.svg","components/idea-card/idea-card.component.jsx","components/ideas-list/ideas-list.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","getData","a","async","data","collection","collectionRef","get","docs","forEach","docSnapsot","push","addNewIdea","id","ideaProps","doc","set","InputCard","children","title","span","className","full","IdeaForm","props","handleChange","event","target","name","value","setState","handleNewSource","state","sources","sourceLink","sourceName","Math","random","toString","substr","handleSubmit","preventDefault","body","userName","createdAt","Date","this","onSubmit","type","onChange","placeholder","onClick","data-text","React","Component","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","transform","_ref","svgRef","width","height","viewBox","ref","ForwardRef","forwardRef","IdeaCard","checked","moment","seconds","fromNow","map","objKey","href","IdeasList","ideas","msg","otherProps","console","log","App","onSnapshot","snapshot","docSnapshot","deas","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96111de8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAwpo3yf7eOQIyISGt6RhbQ8O2BRX1juhA\",\r\n    authDomain: \"linkag-9d931.firebaseapp.com\",\r\n    databaseURL: \"https://linkag-9d931.firebaseio.com\",\r\n    projectId: \"linkag-9d931\",\r\n    storageBucket: \"linkag-9d931.appspot.com\",\r\n    messagingSenderId: \"729455798770\",\r\n    appId: \"1:729455798770:web:342fadea4f7f26f338a36b\"\r\n}\r\n\r\nfirebase.initializeApp(config)\r\n\r\nconst db = firebase.firestore()\r\nexport const getData  = async() =>{\r\n    const data = []\r\n    const collectionRef = await db.collection('ideas')\r\n    const collectionSnapshot = await collectionRef.get()\r\n\r\n    collectionSnapshot.docs.forEach(docSnapsot =>{\r\n        data.push(docSnapsot.data())\r\n    })\r\n\r\n    return{ data, collectionRef}\r\n\r\n}\r\n\r\nexport const addNewIdea = async ({id, ...ideaProps}) =>{\r\n    const docRef = db.collection('ideas').doc(id);\r\n\r\n    docRef.set({\r\n        id,\r\n        ...ideaProps\r\n    });\r\n\r\n}\r\nexport const ideas = [\r\n    {\r\n        title: 'idea1',\r\n        id: 'dsadejweq',\r\n        body: 'Lorem ipsum dolor, sit amet consectetur adipisicing elit. Amet, dolore!',\r\n        sources: {\r\n            photo: 'https://photo.com',\r\n            exemple: 'https://exemple.com'\r\n        }\r\n    }\r\n]\r\n","import React from 'react';\r\n\r\nimport './input-card.styles.scss'\r\nconst InputCard = ({children,title,span, full, className}) => (\r\n    <div className={`input-card card-${span} ${className}`}>\r\n        <div className=\"card-header\">\r\n            <h4>{title}</h4>\r\n        </div>\r\n        {\r\n            children\r\n        }\r\n    </div>\r\n)\r\nexport default InputCard","import React from 'react';\r\n\r\nimport InputCard from '../input-card/input-card.component'\r\n\r\nimport {addNewIdea} from '../../firebase/firebase.functions'\r\nimport './idea-form.styles.scss'\r\nclass IdeaForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: '',\r\n            title: '',\r\n            body: '',\r\n            sources: [],\r\n            sourceLink: '',\r\n            sourceName: '',\r\n            userName: '',\r\n            createdAt: ''\r\n        }\r\n    }\r\n    handleChange = (event) =>{\r\n        const {name, value} = event.target;\r\n        this.setState({[name]: value})\r\n    }\r\n    handleNewSource = (event) => {\r\n        const {sources, sourceLink, sourceName} = this.state\r\n        const id = '_' +Math.random().toString(36).substr(2, 5);\r\n\r\n        sources.push({[sourceName]: sourceLink, id})\r\n        //console.log(sourceName, sourceName, sources)\r\n\r\n        this.setState({\r\n            sources, \r\n            sourceName:\"\", \r\n            sourceLink:\"\"\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const {title, body, sources, userName} = this.state\r\n        const id = Math.random().toString(36).substr(2, 9);\r\n        addNewIdea({title, body, sources, userName , id, createdAt: new Date()})\r\n    }\r\n    render(){\r\n        const {title, body, sourceLink, sourceName, userName} = this.state\r\n        return (\r\n            <div className=\"idea-form\">\r\n                <div className=\"header\">\r\n                    <h3>New idea</h3>\r\n                    <p>Create and add a new idea to your storage</p>\r\n                </div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"column\">\r\n                        <InputCard span=\"2\" title=\"Title\">\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                value={title}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Title\"\r\n                            />\r\n                        </InputCard>\r\n                        <InputCard  span=\"4\" title=\"Body\" full>\r\n                            <textarea \r\n                                type=\"text\"\r\n                                name=\"body\"\r\n                                value={body}\r\n                                placeholder=\"Start tapyng the body of the idea\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </InputCard>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <InputCard span=\"3\" title=\"Sources\" className=\"sources\">\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"sourceName\"\r\n                                value={sourceName}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Name of the source\"\r\n\r\n                            />\r\n                            <input \r\n                                name=\"sourceLink\"\r\n                                type=\"link\"\r\n                                value={sourceLink}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Link of the source\"\r\n                            />\r\n                            <span className=\"more-btn\" onClick={this.handleNewSource}>Add more souces</span>\r\n                        </InputCard>\r\n\r\n                        <InputCard  span=\"2\"title=\"User Name\">\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"User Name\"\r\n                                onChange={this.handleChange}\r\n                                name='userName'\r\n                                value={userName}\r\n                            />\r\n                        </InputCard>\r\n                        <button className=\"btn\" data-text=\"save this idea\" type=\"submit\" >Save This idea</button>\r\n                    </div>\r\n                </form>\r\n        \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default IdeaForm","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Icon_ionic-md-open\",\n  \"data-name\": \"Icon ionic-md-open\",\n  d: \"M28.5,28.5H7.5V7.5h9.375v-3H7.5a3.008,3.008,0,0,0-3,3v21a3.008,3.008,0,0,0,3,3h21a3.008,3.008,0,0,0,3-3V19.125h-3Zm-8.25-24v3H26.4L11.25,22.65l2.1,2.1L28.5,9.6v6.15h3V4.5Z\",\n  transform: \"translate(-4.5 -4.5)\"\n});\n\nvar SvgIconionicMdOpen = function SvgIconionicMdOpen(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 27,\n    height: 27,\n    viewBox: \"0 0 27 27\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconionicMdOpen, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Icon ionic-md-open.ca966a1c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport './idea-card.styles.scss';\r\n\r\nimport {ReactComponent  as OpenIcon }from '../../assets/Icon ionic-md-open.svg';\r\n\r\nimport moment from 'moment'\r\nconst log = (...msg) =>{\r\n    console.log(...msg)\r\n\r\n}\r\n\r\nclass IdeaCard extends React.Component{\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n        }\r\n    };\r\n    render(){\r\n        const {title, body, createdAt, sources, userName } = this.props\r\n        return (\r\n            <div className=\"idea-card\">\r\n                <div className=\"title\">\r\n                    <h2>{title}</h2>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <p>{body}</p>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <p>Created by <span className=\"color\">{userName }</span>{moment(createdAt ? new Date(createdAt.seconds * 1000) : 0).fromNow()} </p>\r\n                </div>\r\n                <div className=\"icon-wrapper\" onClick={() => this.setState({checked: !this.state.checked})}>\r\n                    <OpenIcon className=\"open-icon\" />\r\n        \r\n                </div>\r\n                <div className={`sources ${this.state.checked? 'checked' : ''}`}>\r\n                    <ul>\r\n                        {sources.length ? Object.keys(sources).map(objKey => Object.keys(sources[objKey])\r\n                            .map(key =>(\r\n                                <li key={sources[objKey]['id']}><a  target=\"_blank\" href={sources[objKey][key]}>{key}</a></li>\r\n                            ))\r\n                        ) : `This idea hasn't any source`}\r\n                        {}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IdeaCard","import React from 'react'\r\nimport './ideas-list.stles.scss'\r\nimport IdeaCard from '../idea-card/idea-card.component';\r\nconst log = (msg) =>{\r\n    console.log(msg)\r\n}\r\nconst IdeasList = ({ideas}) =>  (\r\n    <div className=\"ideas-list\">\r\n        {\r\n        ideas.map(({id, ...otherProps}) =>{\r\n            log(id)\r\n            return(\r\n                 <IdeaCard key={id} {...otherProps}/>\r\n            )})}\r\n    </div>\r\n)\r\nexport default IdeasList","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport {getData} from './firebase/firebase.functions';\n\nimport IdeaForm from './components/idea-form/idea-form.component';\nimport IdeasList from './components/ideas-list/ideas-list.component';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      ideas: []\n    }\n  }\n  async componentDidMount(){\n    const {data, collectionRef} = await getData()\n\n    collectionRef.onSnapshot(snapshot =>{\n\n      let ideas = []\n      snapshot.docs.forEach(docSnapshot =>{\n\n        ideas.push(docSnapshot.data())\n      })\n\n      this.setState({ideas})\n    })\n    this.setState({ideas: data})\n  }\n  \n  render(){\n    const {deas} = this.state\n    return(\n      <div className=\"App\">\n        <IdeaForm/>\n        <IdeasList ideas={this.state.ideas}/>\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}